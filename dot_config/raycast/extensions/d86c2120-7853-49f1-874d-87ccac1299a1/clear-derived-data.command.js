var l=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var y=Object.prototype.hasOwnProperty;var h=e=>l(e,"__esModule",{value:!0});var v=(e,t)=>{for(var a in t)l(e,a,{get:t[a],enumerable:!0})},S=(e,t,a,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of f(t))!y.call(e,r)&&(a||r!=="default")&&l(e,r,{get:()=>t[r],enumerable:!(i=p(t,r))||i.enumerable});return e};var g=(e=>(t,a)=>e&&e.get(t)||(a=S(h({}),t,1),e&&e.set(t,a),a))(typeof WeakMap!="undefined"?new WeakMap:0);var b={};v(b,{default:()=>x});var s=require("@raycast/api");async function d(e,t,a,i){let r=await(0,s.showToast)({style:s.Toast.Style.Animated,title:e});try{let o=await i();return r.style=s.Toast.Style.Success,r.title=t,{isSuccess:!0,result:o,toast:r}}catch(o){return console.error(o),r.style=s.Toast.Style.Failure,r.title=a,r.message=`${o}`,{isSuccess:!1,toast:r}}}var u=require("child_process"),m=require("util"),c=(0,m.promisify)(u.exec);var n=class{static clearDerivedData(){return c("rm -rf ~/Library/Developer/Xcode/DerivedData").then()}static clearSwiftPackageManagerCache(){return c("rm -rf ~/Library/Caches/org.swift.swiftpm/repositories").then()}static deleteUnsupportedSimulators(){return c("xcrun simctl delete unavailable").then()}};var x=async()=>{await d("Clearing derived data","Successfully cleared derived data","An error occurred while trying to clear the derived data directory",n.clearDerivedData)};module.exports=g(b);0&&(module.exports={});
